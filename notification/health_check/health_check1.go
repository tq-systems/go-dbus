// Code generated by dbus-codegen-go. DO NOT EDIT.
//
// com.tq_group.tq_em.health_check1.Notification
//
//	Methods
//	  Send
//
// com.tq_group.tq_em.health_check1.Performance
//
//	Methods
//	  GetPerformance
//
// com.tq_group.tq_em.health_check1.Service
//
//	Methods
//	  SendServiceLog
//
// org.freedesktop.DBus.Introspectable
//
//	Methods
//	  Introspect
package health_check

import (
	"log"

	"github.com/godbus/dbus/v5"
)

const (
	methodPropertyGet = "org.freedesktop.DBus.Properties.Get"
	methodPropertySet = "org.freedesktop.DBus.Properties.Set"
)

// Avoid error caused by unused log import
var _ = log.Printf

// Interface is a DBus interface implementation.
type Interface interface {
	iface() string
}

// LookupInterface returns an interface for the named object.
func LookupInterface(object dbus.BusObject, iface string) Interface {
	switch iface {
	case InterfaceNotification:
		return NewNotification(object)
	case InterfacePerformance:
		return NewPerformance(object)
	case InterfaceService:
		return NewService(object)
	case InterfaceOrg_Freedesktop_DBus_Introspectable:
		return NewOrg_Freedesktop_DBus_Introspectable(object)
	default:
		return nil
	}
}

// Signal is a common interface for all signals.
type Signal interface {
	Name() string
	Interface() string
	Sender() string
	Path() dbus.ObjectPath
}

// LookupSignal converts the given raw DBus signal into typed one or returns nil.
func LookupSignal(signal *dbus.Signal) Signal {
	switch signal.Name {
	default:
		return nil
	}
}

// AddMatchRule returns AddMatch rule for the given signal.
func AddMatchRule(sig Signal) string {
	return "type='signal',interface='" + sig.Interface() + "',member='" + sig.Name() + "'"
}

// Interface name constants.
const (
	InterfaceNotification                        = "com.tq_group.tq_em.health_check1.Notification"
	InterfacePerformance                         = "com.tq_group.tq_em.health_check1.Performance"
	InterfaceService                             = "com.tq_group.tq_em.health_check1.Service"
	InterfaceOrg_Freedesktop_DBus_Introspectable = "org.freedesktop.DBus.Introspectable"
)

// NewNotification creates and allocates com.tq_group.tq_em.health_check1.Notification.
func NewNotification(object dbus.BusObject) *Notification {
	return &Notification{object}
}

// Notification implements com.tq_group.tq_em.health_check1.Notification D-Bus interface.
type Notification struct {
	object dbus.BusObject
}

// iface implements the Interface interface.
func (o *Notification) iface() string {
	return InterfaceNotification
}

// Send calls com.tq_group.tq_em.health_check1.Notification.Send method.
func (o *Notification) Send(in0 string, in1 byte, in2 string, in3 string, in4 int64) (err error) {
	err = o.object.Call(InterfaceNotification+"."+"Send", 0, in0, in1, in2, in3, in4).Store()
	return
}

// NewPerformance creates and allocates com.tq_group.tq_em.health_check1.Performance.
func NewPerformance(object dbus.BusObject) *Performance {
	return &Performance{object}
}

// Performance implements com.tq_group.tq_em.health_check1.Performance D-Bus interface.
type Performance struct {
	object dbus.BusObject
}

// iface implements the Interface interface.
func (o *Performance) iface() string {
	return InterfacePerformance
}

// GetPerformance calls com.tq_group.tq_em.health_check1.Performance.GetPerformance method.
func (o *Performance) GetPerformance() (out0 uint64, out1 uint64, out2 uint64, out3 uint64, out4 uint64, out5 uint64, out6 uint64, out7 uint64, err error) {
	err = o.object.Call(InterfacePerformance+"."+"GetPerformance", 0).Store(&out0, &out1, &out2, &out3, &out4, &out5, &out6, &out7)
	return
}

// NewService creates and allocates com.tq_group.tq_em.health_check1.Service.
func NewService(object dbus.BusObject) *Service {
	return &Service{object}
}

// Service implements com.tq_group.tq_em.health_check1.Service D-Bus interface.
type Service struct {
	object dbus.BusObject
}

// iface implements the Interface interface.
func (o *Service) iface() string {
	return InterfaceService
}

// SendServiceLog calls com.tq_group.tq_em.health_check1.Service.SendServiceLog method.
func (o *Service) SendServiceLog(in0 string, in1 string) (err error) {
	err = o.object.Call(InterfaceService+"."+"SendServiceLog", 0, in0, in1).Store()
	return
}

// NewOrg_Freedesktop_DBus_Introspectable creates and allocates org.freedesktop.DBus.Introspectable.
func NewOrg_Freedesktop_DBus_Introspectable(object dbus.BusObject) *Org_Freedesktop_DBus_Introspectable {
	return &Org_Freedesktop_DBus_Introspectable{object}
}

// Org_Freedesktop_DBus_Introspectable implements org.freedesktop.DBus.Introspectable D-Bus interface.
type Org_Freedesktop_DBus_Introspectable struct {
	object dbus.BusObject
}

// iface implements the Interface interface.
func (o *Org_Freedesktop_DBus_Introspectable) iface() string {
	return InterfaceOrg_Freedesktop_DBus_Introspectable
}

// Introspect calls org.freedesktop.DBus.Introspectable.Introspect method.
func (o *Org_Freedesktop_DBus_Introspectable) Introspect() (out string, err error) {
	err = o.object.Call(InterfaceOrg_Freedesktop_DBus_Introspectable+"."+"Introspect", 0).Store(&out)
	return
}
